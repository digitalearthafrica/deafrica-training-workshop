# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, Digital Earth Africa
# This file is distributed under the same license as the Digital Earth
# Africa Training package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Digital Earth Africa Training \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-11-23 20:32+1100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../session_3/02_cloud_masking.ipynb:9 00a041f3cb4a47238bb89732aaa4c4d8
msgid "Cloud masking with ``load_ard()``"
msgstr ""

#: ../../session_3/02_cloud_masking.ipynb:20 17c9d8184da74ad8918de6cb9a6d1d53
msgid ""
"In this exercise, we will apply a cloud mask to Sentinel-2 data off the "
"coast of Ghana. Cloud masks are important as they remove bad data points "
"from our dataset, so we can form a reliable composite image."
msgstr ""

#: ../../session_3/02_cloud_masking.ipynb:32 9969e3353bf44856a0bfa9136ba3e1cb
msgid "Make a new notebook"
msgstr ""

#: ../../session_3/02_cloud_masking.ipynb:43 d0b627e47b6e4d6e9dc0cf01c2fafeda
msgid ""
"Like in the last exercise, we will begin by making a new, blank Jupyter "
"notebook. If you want more detailed instructions on making a new "
"notebook, see `this section in the exercise on loading data in the "
"Sandbox <../session_2/04_load_data_exercise.ipynb#Make-a-new-notebook>`__"
" from the previous session. Otherwise, follow the steps below."
msgstr ""

#: ../../session_3/02_cloud_masking.ipynb:45 18035812add6441494c9a26a137decb3
msgid ""
"Navigate to the **Training** folder (or create this folder following the "
"instructions in `Session 1 "
"<../session_1/04_running_a_notebook.ipynb>`__)."
msgstr ""

#: ../../session_3/02_cloud_masking.ipynb:46 eac07c2afb5f485080712a53b9da34eb
msgid ""
"Click the **+** button and click **Python 3** under the **Notebook** "
"section."
msgstr ""

#: ../../session_3/02_cloud_masking.ipynb:47 8cdd4d20f6e748998f0fd519d7213dec
msgid ""
"Rename your file so you know it is from this exercise. We will use this "
"notebook for working with geomedians, so let us call it "
"``Geomedian_composite.ipynb``."
msgstr ""

#: ../../session_3/02_cloud_masking.ipynb:48 02e8a3abd3564a4fb7749216017c1b8a
msgid "Open the notebook."
msgstr ""

#: ../../session_3/02_cloud_masking.ipynb:60 b97cd6fc0e4d425c994772bdad5ba968
msgid "Set up notebook"
msgstr ""

#: ../../session_3/02_cloud_masking.ipynb:72 e90161036abe4815be9c7100c645619b
msgid "Load packages and functions"
msgstr ""

#: ../../session_3/02_cloud_masking.ipynb:74 e292a63743514b13aee9fb42d9871848
msgid ""
"In the first cell, type the following code and then run the cell. Recall "
"that cells can be run by pressing ``Shift + Enter`` on your keyboard."
msgstr ""

#: ../../session_3/02_cloud_masking.ipynb:76 10cbd6dc11024b07b30479e29baf4df7
msgid "|image1|"
msgstr ""

#: ../../session_3/02_cloud_masking.ipynb:89 db639585708f47d99b5420118ea027c3
msgid ""
"We used most of these packages and functions in the previous exercise on "
"loading data in the Sandbox. ``rgb`` is for plotting true-colour images. "
"``display_map`` is for visualising the area we are mapping."
msgstr ""

#: ../../session_3/02_cloud_masking.ipynb:91 4ce26adc74c44f258f0a3c0bd0956a66
msgid ""
"In this session we introduce two new functions: ``load_ard`` and "
"``xr_geomedian``. We will use ``load_ard`` to load data so it is cloud "
"masked, and ``xr_geomedian`` is used in the next section to compute the "
"geomedian."
msgstr ""

#: ../../session_3/02_cloud_masking.ipynb:103 882bc71c7e5a4e4eac4a3f8e81e0dd6b
msgid "Connect to the datacube"
msgstr ""

#: ../../session_3/02_cloud_masking.ipynb:105 0bc0bd7856214902b4b1a021e4c5bd69
msgid ""
"Enter the following code and run the cell to create our ``dc`` object, "
"which provides access to the datacube."
msgstr ""

#: ../../session_3/02_cloud_masking.ipynb:107 85821e330eb243ada12f75b6e519963a
msgid "|image2|"
msgstr ""

#: ../../session_3/02_cloud_masking.ipynb:120 4b9ec2454a8e47b38a3f031ffc13af1c
msgid ""
"Your notebook is now set up. Next, we will load cloud-masked data using "
"``load_ard()``."
msgstr ""

#: ../../session_3/02_cloud_masking.ipynb:132 ee749519e7e64aca87d465140f2b2434
msgid "Load data with ``load_ard()``"
msgstr ""

#: ../../session_3/02_cloud_masking.ipynb:143 8fe880a109574481b41eef987c7a9cf1
msgid ""
"If you experience errors when running cells, check out the "
"`troubleshooting code guide <../session_2/04_load_data_exercise.ipynb"
"#Troubleshooting-code>`_ from the previous session."
msgstr ""

#: ../../session_3/02_cloud_masking.ipynb:151 81bdb4a3d8a44e64bce6939eaaf908ec
msgid ""
"Let us take a look at a coastal area in Ghana. Enter the following code "
"and run it to display a map of the area. As before, ``x`` denotes "
"longitude and ``y`` denotes latitude."
msgstr ""

#: ../../session_3/02_cloud_masking.ipynb:162 94f1ba174e274d1a8e0fa43d516ce980
msgid "|269cbcb72fbf4926834abc12ee38aa82|"
msgstr ""

#: ../../session_3/02_cloud_masking.ipynb:176 f2c2715f062e4c3ba1b91a52f0b67c1e
msgid ""
"In the new cell below, enter the following code, and then run it to load "
"Sentinel-2 data. It will generate the output text ``Using pixel quality "
"parameters for Sentinel 2 ...``. The output text tells us we have loaded "
"4 timesteps."
msgstr ""

#: ../../session_3/02_cloud_masking.ipynb:187 27c470a1e48646359a666ed08ce188ed
msgid "|55d4ef444c1c41698f87db3f8792e3cb|"
msgstr ""

#: ../../session_3/02_cloud_masking.ipynb:201 0910a3a51aa3483db242da451947a88d
msgid ""
"Take note of some of the differences between ``dc.load()`` and "
"``load_ard``."
msgstr ""

#: ../../session_3/02_cloud_masking.ipynb:203 ebe7b2b239644fd5abcf4ac6e3ce81f8
msgid ""
"``dc=dc`` is a required parameter for ``load_ard()``. This links the data"
" search to the datacube connection, which we defined in the notebook "
"setup as ``dc``."
msgstr ""

#: ../../session_3/02_cloud_masking.ipynb:204 ac41f475df864125a8de3c97917f931d
msgid ""
"The paramter for loading products is ``products`` (plural) not "
"``product`` as it is in ``dc.load()``."
msgstr ""

#: ../../session_3/02_cloud_masking.ipynb:205 a5c0b96205bf4fc790c0f12a7ce72794
msgid ""
"Product items must be listed inside square brackets ``[]``, which is not "
"required for ``dc.load()``."
msgstr ""

#: ../../session_3/02_cloud_masking.ipynb:206 9e1cabf41f3d4af4b488b71feb51afdf
msgid ""
"``min_gooddata`` stands for ‘minimum good data’ and discards observations"
" with less than the fractional requisite of good quality pixels."
msgstr ""

#: ../../session_3/02_cloud_masking.ipynb:217 8d969a5ff0c74bf1829567254852d371
msgid ""
"``s2_l2a`` stands for **S**\\ entinel-**2** **L**\\evel-**2A**. The "
"fourth character is a lower-case alphabet 'l'. Double-check you have "
"entered the product name correctly to avoid errors."
msgstr ""

#: ../../session_3/02_cloud_masking.ipynb:225 4985022f73104af68014c6c1b7b81306
msgid ""
"We can use the same ``rgb`` plotting code as in the last session to show "
"an RGB image of one of the timesteps. Let’s start with the first "
"timestep, which has an ``index`` of ``0``."
msgstr ""

#: ../../session_3/02_cloud_masking.ipynb:236 894235a37b4545a7a9a62207bb0bda53
msgid "|476ad0c2d116411a9ef380374c17a2cf|"
msgstr ""

#: ../../session_3/02_cloud_masking.ipynb:250 6c0db29f18954394888a8c1f01d5f5f6
msgid ""
"This should produce a single RGB image as shown below. What happens if "
"you try changing the ``index`` number?"
msgstr ""

#: ../../session_3/02_cloud_masking.ipynb:261 a8032e942aa0426ea5fdc15efc899adf
msgid "|29e100882c7a4e00bc8f33fb462d507e|"
msgstr ""

#: ../../session_3/02_cloud_masking.ipynb:275 53b159c32f13463383e0f06215d63899
msgid ""
"If we want to see RGB images of all the timesteps at once, we can replace"
" the ``index`` parameter with the ``col`` parameter. The parameter "
"``col`` stands for ‘column’. Specifying ``col='time'`` creates a row of "
"images for the timesteps."
msgstr ""

#: ../../session_3/02_cloud_masking.ipynb:286 7adc094316b648e48d01587781862e3c
msgid "|dc3e64dc5abf45a4a6d0f60dfc5150d2|"
msgstr ""

#: ../../session_3/02_cloud_masking.ipynb:300 d781c2edd89e4db4b8f9ca8561fd1d7f
msgid "The output should look like this."
msgstr ""

#: ../../session_3/02_cloud_masking.ipynb:302 e9fe39b64cf94da2a8d2b23beaa61e08
msgid "|70a85ca49d854e369f3120c547e788b1|"
msgstr ""

#: ../../session_3/02_cloud_masking.ipynb:317 e4ce0ecbaa894b4193c39a54ca058013
msgid "Conclusion"
msgstr ""

#: ../../session_3/02_cloud_masking.ipynb:328 5b0b963278f3429296dfc58722efa1ea
msgid ""
"Good work — you have now loaded data using ``load_ard()``, which has an "
"automatic cloud mask. We can see that the images at different timesteps "
"have different cloud cover, so they have been masked in different places."
" This is why having data at different timesteps can allow us to create a "
"composite image without any cloud."
msgstr ""

#: ../../session_3/02_cloud_masking.ipynb:330 f2ebe4e2cce742ef8a62b61c9801f8d2
msgid ""
"In the next section, we will use this loaded data to create a geomedian "
"composite."
msgstr ""

